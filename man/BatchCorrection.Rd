% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BatchCorrection.R
\name{BatchCorrection}
\alias{BatchCorrection}
\title{Remove batch effect from integrated gene expression data}
\usage{
BatchCorrection(Data, batch, visualise = TRUE, status = NULL)
}
\arguments{
\item{Data}{A \code{data.frame} or \code{matrix} of integrated gene expression
data with multiple batches. Columns contain samples, and rows are genes.}

\item{batch}{Character vector that describes which sample is in what batch.
\code{length(batch) = ncol(Data)}.}

\item{visualise}{(Optional) Logical value. If \code{TRUE}, the batch correction
is verified using PCA plots and boxplots that visualise the data before and
after the batch correction.}

\item{status}{(Optional) Character vector that describes the samples' status,
e.g. treated or control. \code{BatchCorrection} only uses the \code{status}
argument to make plots, i.e. when \code{visualise = TRUE}.}
}
\value{
A \code{data.frame} with the same dimensions as the \code{Data} argument.
}
\description{
The \code{BatchCorrection} function removes the batch effect
in an integrated gene expression dataset using functions inspired by
\code{sva::ComBat} and \code{sva::ComBat_seq} from the \code{sva}
package \insertCite{sva}{GEDI}. This function also allows users to visualise the data before and after
the batch correction with principal component analysis (PCA) plots and boxplots
to verify the batch correction.
}
\details{
Bioconductor's \code{sva} package does not remove batch effect in genes with
zero variance or zero counts within any batch. Therefore, the \code{BatchCorrection}
function uses modified versions of the \code{sva::ComBat} and
\code{sva::ComBat_seq} functions to remove the batch effect in all genes.
The modified \code{ComBat_seq} function corrects data for the batch effect
like the modified \code{ComBat} function, but only for RNA-seq count data.

By setting \code{visualise = TRUE}, the \code{BatchCorrection} function
verifies the batch correction visually. This produces a PCA plot and a boxplot
for the data before and after the batch correction. If the dataset contains
count data, the \code{\link[DESeq2:varianceStabilizingTransformation]{DESeq2::varianceStabilizingTransformation}} function
transforms the dataset. This transformation is only used for verification and
is not permanent.

The PCA plot is a scatterplot where the x- and y-axis are the first two principal
components. Initially, the samples aggregate in batches. After batch correction,
the samples should no longer aggregate in batches, but instead, the batches
should lie on top of each other. Suppose it was possible to distinguish between
samples based on some other variable within each batch before the batch effect was
removed. In that case, it must still be possible to differentiate the samples
after the batch correction.

The boxplots show the distribution of gene expression values for all samples.
After the batch correction, the distribution should be identical across all
batches.
}
\examples{
\dontrun{
### From example in README.md
## Continuing example from GEDI()'s example, see help("GEDI")
# Each dataset is a batch
# Each sample has a status of 'positive' or 'negative'
# Batch and Status variables is seen below:
summary(as.factor(batch))
#> B1 B2 B3
#>  8  6  6
summary(as.factor(status))
#> control treated
#>      10      10

# The batch effect is removed
cData <- BatchCorrection(dat, batch, status = status)
#> Found3batches
#> Adjusting for0covariate(s) or covariate level(s)
#> Standardizing Data across genes
#> Fitting L/S model and finding priors
#> Finding parametric adjustments
#> Adjusting the Data

# To see the resulting figure, check the README.md file in the
# package GitHub repository: github.com/s184257/GEDI
}
}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{ReadGE}}
\code{\link{GEDI}}
\code{\link{VerifyGEDI}}
}
